 // <autogenerated />
using System;
using System.Collections.Generic;
using HydrationPrototype.Interfaces;
using Neo4j.Driver;
namespace MappingTest;
public partial class Movie : INodeHydratable
{
    public void HydrateFromNode(INode node)
    {
Tagline = node.Properties["tagline"].As<System.String>();
Title = node.Properties["title"].As<System.String>();
Released = node.Properties["released"].As<System.Int32>();
    }

    private Dictionary<Type, List<object>> _hydrated_relationships = new();
    public void AddRelationship<T>(object relation)
    {
        List<object> list;
        if(!_hydrated_relationships.TryGetValue(typeof(T), out list))
        {
            list = new();
            _hydrated_relationships[typeof(T)] = list;
        }
        list.Add(relation);
    }

    public IEnumerable<object> GetRelations<T>()
    {
        if(_hydrated_relationships.TryGetValue(typeof(T), out var list))
        {
            return list;
        }
        return Enumerable.Empty<object>();
    }
}